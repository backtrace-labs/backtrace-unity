name: Build package

on:
  push:
    branches: [master]
  pull_request:

jobs:
  build:
    name: Build ${{ matrix.unityVersion }} â€¢ ${{ matrix.targetPlatform }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # LTS with 16 KB support
          - { projectPath: test-package, unityVersion: 2022.3.56f1, targetPlatform: Android, os: ubuntu-latest }
          - { projectPath: test-package, unityVersion: 2022.3.56f1, targetPlatform: WebGL, os: ubuntu-latest }
          - { projectPath: test-package, unityVersion: 2022.3.56f1, targetPlatform: StandaloneLinux64, os: ubuntu-latest }
          - { projectPath: test-package, unityVersion: 2022.3.56f1, targetPlatform: StandaloneWindows64, os: windows-latest }
          - { projectPath: test-package, unityVersion: 2022.3.56f1, targetPlatform: StandaloneOSX, os: macos-14 }
          - { projectPath: test-package, unityVersion: 2022.3.56f1, targetPlatform: iOS, os: macos-14 }

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with: { lfs: true }

      - name: Setup Environment
        run: |
          mkdir -p ${{ matrix.projectPath }}
          mv Editor Runtime Tests Android iOS Windows package.json ${{ matrix.projectPath }}/

      - name: Free disk for Android
        if: matrix.targetPlatform == 'Android' && startsWith(matrix.os, 'ubuntu')
        uses: jlumbroso/free-disk-space@v1.3.1

      - name: Build
        uses: game-ci/unity-builder@v4
        env:
          UNITY_EMAIL:    ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL:   ${{ secrets.UNITY_SERIAL }}
        with:
          unityVersion:   ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          projectPath:    ${{ matrix.projectPath }}/
          allowDirtyBuild: true
